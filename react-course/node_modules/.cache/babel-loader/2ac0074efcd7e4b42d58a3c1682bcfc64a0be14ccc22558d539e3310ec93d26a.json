{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nexport function SignInPage() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"https://fakestoreapi.com/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: email,\n          // Здесь предполагается, что API ожидает 'username', а не 'email'.\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Token:', data.token); // Вывод токена в консоль\n        // Сохранение токена в localStorage или cookie для дальнейшего использования\n        localStorage.setItem('token', data.token);\n        navigate(\"/\"); // Перенаправление на главную страницу\n      } else {\n        setError(\"Failed to sign in. Please check your credentials.\");\n      }\n    } catch (error) {\n      setError(\"Sign-in failed. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // import React, { FormEvent, useState } from \"react\";\n  // import { Link, useNavigate } from \"react-router-dom\";\n\n  // export function SignInPage() {\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n  //   const [loading, setLoading] = useState(false);\n  //   const [error, setError] = useState(\"\");\n  //   const navigate = useNavigate();\n\n  //   const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n  //     e.preventDefault();\n  //     setLoading(true);\n  //     setError(\"\");\n\n  //     try {\n  //       const response = await fetch(\"https://fakestoreapi.com/auth/login\", {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({\n  //           username: email,\n  //           password: password,\n  //         }),\n  //       });\n\n  //       const data = await response.json();\n  //       if (response.ok) {\n  //         console.log(data); // Токен должен быть сохранён и использован для последующих запросов\n  //         navigate(\"/\"); // Перенаправление на главную страницу\n  //       } else {\n  //         setError(\"Failed to sign in. Please check your credentials.\"); // Показать ошибку пользователю\n  //       }\n  //     } catch (error) {\n  //       setError(\"Sign-in failed. Please try again later.\");\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   return (\n  //     <div className=\"flex justify-center items-center h-screen\">\n  //       <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n  //         <h2 className=\"text-2xl mb-6\">Sign In</h2>\n  //         <form onSubmit={handleSubmit}>\n  //           <div className=\"mb-4\">\n  //             <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n  //               Email address\n  //             </label>\n  //             <input\n  //               type=\"email\"\n  //               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n  //               id=\"email\"\n  //               placeholder=\"Enter email\"\n  //               value={email}\n  //               onChange={(e) => setEmail(e.target.value)}\n  //             />\n  //           </div>\n  //           <div className=\"mb-6\">\n  //             <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n  //               Password\n  //             </label>\n  //             <input\n  //               type=\"password\"\n  //               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n  //               id=\"password\"\n  //               placeholder=\"Password\"\n  //               value={password}\n  //               onChange={(e) => setPassword(e.target.value)}\n  //             />\n  //           </div>\n  //           <button\n  //             type=\"submit\"\n  //             disabled={loading}\n  //             className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\n  //           >\n  //             {loading ? 'Signing in...' : 'Sign In'}\n  //           </button>\n  //           {error && <p className=\"text-red-500 mt-2\">{error}</p>}\n  //         </form>\n  //         <div className=\"mt-4 text-center\">\n  //           <p>\n  //             Don't have an account?{\" \"}\n  //             <Link to=\"/sign_up\" className=\"text-blue-600 hover:underline\">\n  //               Register\n  //             </Link>\n  //           </p>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n}\n\n// import React, { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// export function SignInPage() {\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState(\"\");\n//     const navigate = useNavigate();\n\n//     const handleSubmit = async (e) => {\n//       e.preventDefault();\n//       setLoading(true);\n//       setError(\"\");\n\n//       try {\n//         const response = await fetch(\"https://fakestoreapi.com/auth/login\", {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify({\n//             username: email,\n//             password: password,\n//           }),\n//         });\n\n//         const data = await response.json();\n//         if (response.ok) {\n//           console.log(data); // Токен должен быть сохранён и использован для последующих запросов\n//           navigate(\"/\"); // Перенаправление на главную страницу\n//         } else {\n//           setError(\"Failed to sign in. Please check your credentials.\"); // Показать ошибку пользователю\n//         }\n//       } catch (error) {\n//         setError(\"Sign-in failed. Please try again later.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//   return (\n//     <div className=\"flex justify-center items-center h-screen\">\n//       <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n//         <h2 className=\"text-2xl mb-6\">Sign In</h2>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n//               Email address\n//             </label>\n//             <input\n//               type=\"email\"\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//               id=\"email\"\n//               aria-describedby=\"emailHelp\"\n//               placeholder=\"Enter email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"mb-6\">\n//             <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n//               Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//               id=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n//           </div>\n//           <button\n//             type=\"submit\"\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full\"\n//           >\n//             Sign In\n//           </button>\n//         </form>\n//         <div className=\"mt-4 text-center\">\n//           <p>\n//             Don't have an account?{\" \"}\n//             <Link to=\"/sign_up\" className=\"text-blue-600\">\n//               Register\n//             </Link>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// export function SignInPage() {\n//   return (\n//     <div className=\"flex justify-center items-center h-screen\">\n//       <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n//         <h2 className=\"text-2xl mb-6\">Sign In</h2>\n//         <form>\n//           <div className=\"mb-4\">\n//             <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n//               Email address\n//             </label>\n//             <input\n//               type=\"email\"\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//               id=\"email\"\n//               aria-describedby=\"emailHelp\"\n//               placeholder=\"Enter email\"\n//             />\n//           </div>\n//           <div className=\"mb-6\">\n//             <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\">\n//               Password\n//             </label>\n//             <input\n//               type=\"password\"\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//               id=\"password\"\n//               placeholder=\"Password\"\n//             />\n//           </div>\n//           <button\n//             type=\"submit\"\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full\"\n//           >\n//             Sign In\n//           </button>\n//         </form>\n//         <div className=\"mt-4 text-center\">\n//           <p>\n//             Don't have an account?{\" \"}\n//             <Link to=\"/sign_up\" className=\"text-blue-600\">\n//               Register\n//             </Link>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n_s(SignInPage, \"JFyMkpbIyQxesT32Z9Rn59TcFHs=\", false, function () {\n  return [useNavigate];\n});\n_c = SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["useState","useNavigate","SignInPage","_s","email","setEmail","password","setPassword","loading","setLoading","error","setError","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","data","json","ok","console","log","token","localStorage","setItem","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/KBTU/react_primal/React/React-Final/React-Fall/react-course/src/pages/SignInPage.tsx"],"sourcesContent":["import React, { FormEvent, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport function SignInPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"https://fakestoreapi.com/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: email, // Здесь предполагается, что API ожидает 'username', а не 'email'.\r\n          password: password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log('Token:', data.token); // Вывод токена в консоль\r\n        // Сохранение токена в localStorage или cookie для дальнейшего использования\r\n        localStorage.setItem('token', data.token);\r\n        navigate(\"/\"); // Перенаправление на главную страницу\r\n      } else {\r\n        setError(\"Failed to sign in. Please check your credentials.\");\r\n      }\r\n    } catch (error) {\r\n      setError(\"Sign-in failed. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  \r\n// import React, { FormEvent, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n\r\n// export function SignInPage() {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(\"\");\r\n\r\n//     try {\r\n//       const response = await fetch(\"https://fakestoreapi.com/auth/login\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({\r\n//           username: email,\r\n//           password: password,\r\n//         }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         console.log(data); // Токен должен быть сохранён и использован для последующих запросов\r\n//         navigate(\"/\"); // Перенаправление на главную страницу\r\n//       } else {\r\n//         setError(\"Failed to sign in. Please check your credentials.\"); // Показать ошибку пользователю\r\n//       }\r\n//     } catch (error) {\r\n//       setError(\"Sign-in failed. Please try again later.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex justify-center items-center h-screen\">\r\n//       <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n//         <h2 className=\"text-2xl mb-6\">Sign In</h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"mb-4\">\r\n//             <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n//               Email address\r\n//             </label>\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//               id=\"email\"\r\n//               placeholder=\"Enter email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-6\">\r\n//             <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//               id=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={loading}\r\n//             className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n//           >\r\n//             {loading ? 'Signing in...' : 'Sign In'}\r\n//           </button>\r\n//           {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n//         </form>\r\n//         <div className=\"mt-4 text-center\">\r\n//           <p>\r\n//             Don't have an account?{\" \"}\r\n//             <Link to=\"/sign_up\" className=\"text-blue-600 hover:underline\">\r\n//               Register\r\n//             </Link>\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n}\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n\r\n// export function SignInPage() {\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [error, setError] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n  \r\n//     const handleSubmit = async (e) => {\r\n//       e.preventDefault();\r\n//       setLoading(true);\r\n//       setError(\"\");\r\n  \r\n//       try {\r\n//         const response = await fetch(\"https://fakestoreapi.com/auth/login\", {\r\n//           method: \"POST\",\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//           body: JSON.stringify({\r\n//             username: email,\r\n//             password: password,\r\n//           }),\r\n//         });\r\n  \r\n//         const data = await response.json();\r\n//         if (response.ok) {\r\n//           console.log(data); // Токен должен быть сохранён и использован для последующих запросов\r\n//           navigate(\"/\"); // Перенаправление на главную страницу\r\n//         } else {\r\n//           setError(\"Failed to sign in. Please check your credentials.\"); // Показать ошибку пользователю\r\n//         }\r\n//       } catch (error) {\r\n//         setError(\"Sign-in failed. Please try again later.\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//   return (\r\n//     <div className=\"flex justify-center items-center h-screen\">\r\n//       <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n//         <h2 className=\"text-2xl mb-6\">Sign In</h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"mb-4\">\r\n//             <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n//               Email address\r\n//             </label>\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//               id=\"email\"\r\n//               aria-describedby=\"emailHelp\"\r\n//               placeholder=\"Enter email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-6\">\r\n//             <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//               id=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full\"\r\n//           >\r\n//             Sign In\r\n//           </button>\r\n//         </form>\r\n//         <div className=\"mt-4 text-center\">\r\n//           <p>\r\n//             Don't have an account?{\" \"}\r\n//             <Link to=\"/sign_up\" className=\"text-blue-600\">\r\n//               Register\r\n//             </Link>\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// export function SignInPage() {\r\n//   return (\r\n//     <div className=\"flex justify-center items-center h-screen\">\r\n//       <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n//         <h2 className=\"text-2xl mb-6\">Sign In</h2>\r\n//         <form>\r\n//           <div className=\"mb-4\">\r\n//             <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n//               Email address\r\n//             </label>\r\n//             <input\r\n//               type=\"email\"\r\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//               id=\"email\"\r\n//               aria-describedby=\"emailHelp\"\r\n//               placeholder=\"Enter email\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"mb-6\">\r\n//             <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//               id=\"password\"\r\n//               placeholder=\"Password\"\r\n//             />\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full\"\r\n//           >\r\n//             Sign In\r\n//           </button>\r\n//         </form>\r\n//         <div className=\"mt-4 text-center\">\r\n//           <p>\r\n//             Don't have an account?{\" \"}\r\n//             <Link to=\"/sign_up\" className=\"text-blue-600\">\r\n//               Register\r\n//             </Link>\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n"],"mappings":";AAAA,SAA2BA,QAAQ,QAAQ,OAAO;AAClD,SAAeC,WAAW,QAAQ,kBAAkB;AAEpD,OAAO,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAG,MAAOC,CAA6B,IAAK;IAC5DA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAEnB,KAAK;UAAE;UACjBE,QAAQ,EAAEA;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,MAAMkB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC;QACnC;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACK,KAAK,CAAC;QACzCjB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM;QACLD,QAAQ,CAAC,mDAAmD,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,yCAAyC,CAAC;IACrD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAGH;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAN,EAAA,CAtRgBD,UAAU;EAAA,QAKPD,WAAW;AAAA;AAAA+B,EAAA,GALd9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}